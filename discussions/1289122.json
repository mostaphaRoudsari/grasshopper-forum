{"body": "\nHello Mostapha and Chris,\n\n\n\nI was wondering if you also think that an EMS component would be a great addition for Honeybee.\n\n\n\nIn my part of the world, all green building construction has to have an EMS system installed. It would be great for us engineers to show the predicted impact of an EMS system to the building in terms of energy consumption and indoor thermal comfort.\n\n\n\nI understand that Energy Plus has an EMS object, although I have to admit I do not know how developed it is.\n\n\n\nDo you think there would be space for one more item in the wishlist?\n\n\n\nIf not, I wonder if anyone in the community has some experience in using the EMS component. Specifically in adding it through the extra strings in Honeybee simulation component.\n\n\n\nThank you all in advance.\n\n\n\nKind regards,\n\nTheodore.\n\n\n\n\n", "attachments": [], "created_by_name": "Theodoros Galanos", "created_at": "May 17, 2015 at 8:56pm", "created_by": "TheodorosGalanos", "topic": "What about an EMS component?", "replies": [{"body": "\nI'm bumping this because it seems interesting.\n\n\n\nI did some additional research into the EMS module provided in EnergyPlus.\n\n\n\nIt seems that it is a high-level control object, much like the ones we already have access too in Honeybee or Openstudio components (e.g. set point manager, availability manager, demand manager, etc.). The interesting, in my opinion, advantage of the EMS module is that it can span system boundaries effectively integrating different high-level control objects. My intuition is that this can be used to incorporate occupant thermal comfort into energy optimization routines.\n\n\n\nA problem might be that coding is required to develop EMS modules, specifically using the EnergyPlus Runtime Language (ERL). It's functionality is also hindered by the availability of sensor and actuator objects. Sensors are quite easy to develop (as they come from EP outputs). I am currently trying to understand what kind of actuators are available and which have been developed.\n\n\n\nFurthermore, the way the EMS module runs it seems to me as an internal optimization or quality-check of the whole simulation. What it does is after each timestep, it goes through the EP reports the variable values, and checks them against actuator values. If required, the timestep is repeated (this might be an issue if we poorly design control strategies).\n\n\n\nAnyways, I think I've said too much. I'm going over this which seems like a solid reference ([http://apps1.eere.energy.gov/buildings/energyplus/pdfs/ems_applicat...](http://apps1.eere.energy.gov/buildings/energyplus/pdfs/ems_application_guide.pdf)). Hoping for some feedbacks on this, even if it's bad :)\n\n\n\nKind regards,\n\nTheodore.\n", "attachments": [], "created_by_name": "Theodoros Galanos", "created_at": "May 31, 2015 at 9:32pm", "created_by": "TheodorosGalanos", "replies": [{"body": "\nHello Theodore,\n\n\n\nI believe we are looking for something very similar. I would be very interested in seeing Honeybee interfacing with EnergyPlus's EMS. There is some python code my research group and I have developed to improve parts of building energy models which we would like to connect to EnergyPlus. The best example I've seen thus far is Ladybug and Honeybee here. Additionally, it would be awesome to drop our code in as a component in grasshopper and link up with a ladybug+honeybee building model setup. So overall, I would be very interested in seeing a connection between Honeybee and EnergyPlus EMS.\u00a0\n\n\n\n**Side discussion you might find interesting:\u00a0**\n\nI would also like to bring to your attention the FMI standard ([https://fmi-standard.org/start](https://fmi-standard.org/start)), which is a standard for packaging models and connect with other tools. One of those supported tools is EnergyPlus, which uses EnergyPlus' ExternalInterface and EMS components to connect with functional mockup units (FMUs) for cosimulation.\u00a0\n\nThe ExternalInterface can map to three EnergyPlus\u00a0input objects (EMS) called:<br/>ExternalInterface:FunctionalMockupUnitImport:To:Schedule<br/>ExternalInterface:FunctionalMockupUnitImport:To:Actuator<br/>ExternalInterface:FunctionalMockupUnitImport:To:Variable.\n\nFMUs are models, typically written in Modelica but can be other languages, that are packaged into C code with necessary solvers to passing results between models on a timestep basis. In other words, a model written in modelica is packaged and connected to EnergyPlus using the FMI standard and EP's EMS. Coming from the other side of the setup, using research from LBL done by Thierry Stephane Nouidui and Machael Wetter, you can package EnergyPlus as an FMU. One example of this work can be found:\u00a0[http://eetd.lbl.gov/publications/functional-mock-up-unit-import-in-ene](http://eetd.lbl.gov/publications/functional-mock-up-unit-import-in-ene).\u00a0\n\n\n\nThe reason I bring all this up is because I asked a different question on GitHub recently about how to link Python code to EnergyPlus (really the EMS). Although this question is quite different there are some similarities and the end result is nearly the same. The question can be found:\u00a0[http://stackoverflow.com/questions/30717611/fmu-export-of-python-co...](http://stackoverflow.com/questions/30717611/fmu-export-of-python-code-or-python-interface-with-fmi-standard-for-use-in-energ) and also here:\u00a0[https://unmethours.com/question/8356/fmu-export-of-python-code-or-p...](https://unmethours.com/question/8356/fmu-export-of-python-code-or-python-interface-with-fmi-standard-for-use-in-energyplus-co-simulation/)\n\n\n", "attachments": [], "created_by_name": "Justin Shultz", "created_at": "June 17, 2015 at 2:58pm", "created_by": "JustinShultz", "replies": []}, {"body": "\nHi guys,\n\nThank you for adding this discussion and the resources. This is a good discussion to be added to github so we can implement it at some point. I personally have no experience in using either EMS or FMU, but I can see how they can be really helpful for advance users.\n\nSince we already have so much in our plate I don't think I will find a time soon to implement them. At the same time if either of you [or anybody else on the group] is willing to take on the development I will be happy to support you during the process.\n\nCheers,\n\nMostapha\n\n\n\n\n", "attachments": [], "created_by_name": "Mostapha Sadeghipour Roudsari", "created_at": "June 19, 2015 at 5:26am", "created_by": "MostaphaSadeghipour", "replies": []}]}], "id": "1289122"}