{"body": "\nHi All,\n\nI'm working on a masterplan looking at the outdoor comfort performance of its streets and pavements.\n\nI'm using the Honeybee microclimate map tools as the basis for this but wondered if there's any way of reusing the viewFactorInfo without having to recalculate every-time I open the GH file.\n\nFor a sense of scale I'm trying to determine the view factor between approximately 30000 points and 450 surfaces - which (according to some **wild** extrapolation) would take around 2.5 hours on my machine to calculate.\n\nI though of perhaps writing the viewFactorInfo to file to reload - but as its stored in IronPython.Runtime.List format this is proving a bit more difficult even with Giulio's handy conversion script.\n\nDoes anyone have any other suggestions about how to either speed up the calculation process or serialising the output to re-load later?\n\n\n\n\n", "attachments": [], "created_by_name": "Tristan Gerrish", "created_at": "June 29, 2017 at 10:16am", "created_by": "TristanGerrish", "topic": "Storing IndoorViewFactor viewFactorInfo", "replies": [{"body": "\nI'm interested too\n", "attachments": [], "created_by_name": "Federico Cucchi", "created_at": "June 29, 2017 at 12:44pm", "created_by": "FedericoCucchi", "replies": [{"body": "", "attachments": [], "created_by_name": "Chris Mackey", "created_at": "June 30, 2017 at 6:28am", "created_by": "ChrisMackey", "replies": []}, {"body": "\nThanks for the reply Chris.\n\nThat sounds brilliant! Will that be an XML/JSON serialised version of the objects? If so I can see lots of potential for processing outside GH in pure Python.\n\nKeep up the good work and\u00a0I look forward to playing with it when it becomes available.\n", "attachments": [], "created_by_name": "Tristan Gerrish", "created_at": "June 30, 2017 at 6:35am", "created_by": "TristanGerrish", "replies": []}, {"body": "\nHi Tristan,\n\nUnfortunately, the easily-achievable goal that I am working towards right now will output the HBObjects into a binary file and will use [python pickle](https://docs.python.org/2/library/pickle.html)\u00a0to do so. \u00a0I would really like to enable the serialization to something that is text-readable like XML or JSON for all of the uses that you reference. \u00a0However, this may be difficult for the current (legacy) version of Honeybee that is deeply intertwined with Rhino objects. \u00a0Needles to say, this is something that we are keeping in mind for [Honeybee-Plus](https://github.com/ladybug-tools/honeybee-plus)\u00a0and I am positive that we will support serialization to these formats at some point in that version.\n\n-Chris\n", "attachments": [], "created_by_name": "Chris Mackey", "created_at": "June 30, 2017 at 10:12am", "created_by": "ChrisMackey", "replies": []}, {"body": "\nHi Chris,\n\nthis is a great upgrade!\n\nI am working with complex urban geometries and it could help so much the workflow!\n\n\n\nThank you!\n", "attachments": [], "created_by_name": "Federico Cucchi", "created_at": "June 30, 2017 at 9:00am", "created_by": "FedericoCucchi", "replies": []}, {"body": "\nThat sounds great, Im looking forward to put my hands on it.\n\nBig thanks!\n", "attachments": [], "created_by_name": "Rafael A.", "created_at": "June 30, 2017 at 9:53am", "created_by": "RafaelA", "replies": []}, {"body": "\nGood to see this one getting handled Chris!\n\n\n\nIt will be of great help as we both know how time consuming this step can be.\n\n\n\nKind regards,\n\nTheodore.\n", "attachments": [], "created_by_name": "Theodoros Galanos", "created_at": "July 3, 2017 at 12:34am", "created_by": "TheodorosGalanos", "replies": []}]}, {"body": "\nHi there,\n\ndefinitely, this would be super helpful.\n\n+1 interested\n", "attachments": [], "created_by_name": "Rafael A.", "created_at": "June 30, 2017 at 4:41am", "created_by": "RafaelA", "replies": []}, {"body": "\nAnother useful option would be to allow input of a specific mesh from which to calculate the view factor.\n\nThis way we could try to mesh in detail where we need it (near shading elements are areas with interesting air movement patterns) and less detail elsewhere.\n", "attachments": [], "created_by_name": "Tristan Gerrish", "created_at": "June 30, 2017 at 5:18am", "created_by": "TristanGerrish", "replies": [{"body": "", "attachments": [], "created_by_name": "Federico Cucchi", "created_at": "June 30, 2017 at 5:36am", "created_by": "FedericoCucchi", "replies": []}, {"body": "\nCould you explain that a bit more?\n\nThe way the component currently works uses the gridSize input to specify overall mesh edge lengths, created within the viewFactor component. I assume this is then used to create a mesh and obtain face centre points from which the view factor is calculated.\n\nI'm wondering if there's a way of providing the actual mesh, or a list of points from which the view factor could then be determined.\n\nSomething like how snappyHexMesh creates an adaptive mesh around components for CFD - where finer resolution is required as opposed to large areas of the domain where there's no need for such fine mesh.\n\nIs there another method I might have overlooked?\n", "attachments": [], "created_by_name": "Tristan Gerrish", "created_at": "June 30, 2017 at 5:55am", "created_by": "TristanGerrish", "replies": []}, {"body": "\nHi Tristan,\n\nit's very simple, easier than you think.\n\nJust create the surface that you want to simulate, with your custom subdivisions, join every trimmed surface\u00a0in one and create the sides and the bottom of the ground zone, in order to have a single closed brep.\n\nSet it as \"ground HBzone\" and connect it to viewFactor component setting as grid size an high value (for example 100 meters), in order to have a single point for each face.\n", "attachments": [], "created_by_name": "Federico Cucchi", "created_at": "June 30, 2017 at 9:14am", "created_by": "FedericoCucchi", "replies": []}]}]}