{"body": "\nHello guys,\n\nWhile doing a project for shade benefit analysis tackling specific indicators related to daylight quality I found out some issues.\n\nI have been trying to make some shading devices with the LB shading device creator,<br/>when I turn the boolean toggle into \"false\" in order to generate \"vertical\" shading devices, it usually gives illogical results, when i take into account the Sun Vector input, when is use the input from 0&lt;3, I can get some results but they are not vector based.\n\nIs there a problem with my set up?\n\n\n\nI will attach the definition.\n\n\n\n\n\n\n", "attachments": [{"link": "http://www.grasshopper3d.com/group/ladybug/forum/attachment/download?id=2985220%3AUploadedFile%3A1480209", "name": "shade_generating.gh"}], "created_by_name": "Luis E. Lopez", "created_at": "March 9, 2016 at 7:47am", "created_by": "moxshinobi", "topic": "Issues while generating East or West shading devices.", "replies": [{"body": "\nLuis,\n\n\n\nI apologize for such a late reply.\u00a0 The shade generator component can start to freak out when you give it sun vectors that are close to being perpendicular to the window surface (since these sun vectors cannot be blocked with shade surfaces that are perpendicular to the window).\u00a0 I would suggest one of the following:\n\n\n\n1) Do not using the sun vector input if you are going to use very low sun angles (just use the depth)\n\n2) Angle your shades so that it is possible for them to block the low sun.\n\n3) Use the shade benefit evaluator component to visualize the sun you want to block instead of the shade generator component.\n\n\n\nMostapha might do a revision of the sun vector methods of this component with the new version of Ladybug since it is related to geometric view factor calculations that I know he has been planning to rewrite for a while.\u00a0 I am sorry that I can't offer a better solution for the time being.\n\n\n\n-Chris\n", "attachments": [], "created_by_name": "Chris Mackey", "created_at": "March 17, 2016 at 4:07pm", "created_by": "ChrisMackey", "replies": [{"body": "\nChris,\u00a0\n\n\n\nThanks a lot I will take that into consideration and move on, angling the shades might work and perhaps try different sorts of iterations of design I can come up with.\u00a0\n\n\n\nLuis\u00a0\n", "attachments": [], "created_by_name": "Luis E. Lopez", "created_at": "March 17, 2016 at 4:15pm", "created_by": "moxshinobi", "replies": []}, {"body": "\nI'm not sure if we can call this an issue. The shading generator tries to generate the geometry that covers the glass from the sun vector. If the sun vector is almost perpendicular to the surface then the shading will be a close to infinite surface.\n", "attachments": [], "created_by_name": "Mostapha Sadeghipour Roudsari", "created_at": "March 17, 2016 at 9:32pm", "created_by": "MostaphaSadeghipour", "replies": []}, {"body": "\nMostapha,\n\nTo clarify, I have put a check into the component that identifies any vectors that are perfectly perpendicular to the window, discounts them, and gives a warning. \u00a0Luis is getting one of these warnings in his file and so, to some extent, things are working as we like.\n\nHowever, it is also possible to put in vectors that are \"close\" to being perpendicular, which are tough to identify but can nevertheless make the (sometimes buggy) Rhinocommon intersection calculations go crazy. \u00a0I don't know what exactly what counts as a \"close\" enough vector and I should investigate this in the future when I have time. \u00a0In the meantime, I worry about limiting people's freedom to input different vectors if I try to put in something to take out \"close enough\" vectors without understanding exactly what they are. \u00a0So user self-policing their inputs seems to be the best policy until someone gets time to investigate this.\n\n\n\n-Chris\n", "attachments": [], "created_by_name": "Chris Mackey", "created_at": "March 19, 2016 at 2:43pm", "created_by": "ChrisMackey", "replies": []}]}]}