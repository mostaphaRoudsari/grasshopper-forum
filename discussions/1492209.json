{"body": "\nHello, <br/> I am working on some fa\u00e7ade design and I used Tilt and Orientation Factor (TOF) component to find optimal angle of PV panels. Now need to find out the best size of PV panel size upon given array of windows.<br/><br/> Let\u2019s assume that the fa\u00e7ade has 4 by 4 windows and each of it has room at the back side. Also the width of the PV panels are equal to the width of the window. The problem is to find the length of the PV panel. Because the upper panels will obviously make shadow over the lower ones. Thus, what would be the maximum length of the PV panel in terms of solar harvesting?<br/>[<img class=\"align-full\" src=\"http://api.ning.com:80/files/dCEfApjkVSCsqpilujkAEcNuey3oSQH-MolYzpdP2rlwkbrPiXnLLel7Yg5k6kiL7HrJ3Xn1RpXXWtVGOzG0**7q7MOIbxBX/Screenshot.jpg?width=750\" width=\"750\"/>](http://api.ning.com:80/files/dCEfApjkVSCsqpilujkAEcNuey3oSQH-MolYzpdP2rlwkbrPiXnLLel7Yg5k6kiL7HrJ3Xn1RpXXWtVGOzG0**7q7MOIbxBX/Screenshot.jpg)\n\nI have been looking around the forum and watched some tutorial but not very sure whether LB and HB has this kind of component (I don\u2019t think that would exist maybe i should use Galapagos?) and I will be very appreciated if you give any suggestions regarding this issue.<br/> <br/> Thank you very much for your time.\n\n\n\n\n", "attachments": [{"link": "http://www.grasshopper3d.com/group/ladybug/forum/attachment/download?id=2985220%3AUploadedFile%3A1492207", "name": "Finding optimal size of PV in given array.3dm"}, {"link": "http://www.grasshopper3d.com/group/ladybug/forum/attachment/download?id=2985220%3AUploadedFile%3A1492208", "name": "Finding optimal size of PV in given array..gh"}], "created_by_name": "Amaraa", "created_at": "March 25, 2016 at 11:13am", "created_by": "Amartuvshin", "topic": "Finding an optimal size of PV panel in given array.", "replies": [{"body": "\nHi awkweird,<br/><br/>My apologies for the late reply. I had to edit the **PV SWH system size** component in order for it to support overhang PV panels attached to a vertical building wall.<br/>Previously **PV SWH system size** component supported only ground PV panels and angled roof PV panels.\n\n<br/>Download the newest **PV SWH system size** component\u00a0[from here](https://github.com/mostaphaRoudsari/ladybug/blob/master/userObjects/Ladybug_PV%20SWH%20System%20Size.ghuser) (Click on \"View Raw\" to download it. Then move the downloaded .ghuser file to File-&gt;Special Folders-&gt;User Objects Folder, an confirm to overwrite it with previously located one).\n\n<br/>Just a few opinions on the project you are currently working on:<br/><br/>This kind of fixed, non-transparent (overhang) PV panels attached to a building facade are vert convenient for locations with higher latitudes.<br/>The reason for this is because they (fixed overhang PV panels) are dimensioned according to the sun position at summer solstice. Elevation angles on summer solstice at higher latitude locations are lower, than those of lower latitude locations.<br/><br/>Due to Incheon's low latitude (37), you will get rather short length of the PV panels***** : less than 10 centimeters (0.097 meters in the attached .gh file below). As you have mentioned, Galapagos needs to be used too.<br/><br/><br/>I will just mention some of the good and bad ways in which the upper issue could be somewhat avoided:<br/><br/>1) Increasing the vertical distance between PV panels (PV panels appear above every second window).<br/><br/>2) Increase the tilt angle. This will increase the length of PV panels also, but will decrease the final annual AC energy output.<br/>An example of this solution has been applied at FKI building in Seoul (latitude: 37N):<br/><br/>[<img class=\"align-full\" height=\"114\" src=\"http://api.ning.com:80/files/b*u3sBO-oVUoLhFOzWuoQvuFx3JFj1GqGBZfB8iPx1bG3s326PcYHk2wgiB9AfEk0FuoZjngVHmECvBHzVKLcmCyZGNZJB5A/fki_exterior_detail.jpg?width=721\" width=\"178\"/>](http://api.ning.com:80/files/b*u3sBO-oVUoLhFOzWuoQvuFx3JFj1GqGBZfB8iPx1bG3s326PcYHk2wgiB9AfEk0FuoZjngVHmECvBHzVKLcmCyZGNZJB5A/fki_exterior_detail.jpg)<br/>I already did some tests (with tilt angles: 40, 45, 55) and this does not seem like a good solution, though.<br/><br/>3) Shrinking the \"sun window\" by using the **minimalSpacingPeriod_** input. In Photovoltaics, a planner is suppose to make the 9h to 15h part of the sun window free of any obstructions. If you try to decrease the \"sun window\" to 10 to 14h, the length of your PV panels will increase. You can try to experiment a little bit with this (set your **minimalSpacingPeriod_** to 21th of June 10 to 14hours). In general, shrinking the sun window on summer solstice is not a good principle during planning.<br/><br/>4) Using tracking PV panels, not fixed ones. But Ladybug Photovoltaics components do not support this kind of PV systems. They only support fixed ones.<br/><br/><br/>I would personally go with the first option. You can also experiment with the second and third one.<br/><br/>Comment back if you have any other questions.<br/><br/>-----------------------<br/><br/>***** By \"length of the PV panels\" I mean the: **tiltedArrayHeight_** input of the **PV SWH system size** component.\n", "attachments": [{"link": "http://www.grasshopper3d.com/group/ladybug/forum/attachment/download?id=2985220%3AUploadedFile%3A1497436", "name": "FindingoptimalsizeofPVingivenarray2.gh"}], "created_by_name": "djordje", "created_at": "March 31, 2016 at 3:56am", "created_by": "djordje", "replies": [{"body": "\nDear djordje.<br/> <br/> Thank you for your generous answer it really helped a lot.\u00a0 All of the suggestions you made are so meaningful to my small research, and I think I will consider number 3 which seems more suitable to my case. I tired the **PV SWH system** component but it only worked on ground (xy) plane. I cannot wait to try your updated component and let you know if there are any other things regarding this issue. <br/> <br/> Once again, thank you very much and have a great day!\n", "attachments": [], "created_by_name": "Amaraa", "created_at": "March 31, 2016 at 9:53am", "created_by": "Amartuvshin", "replies": []}, {"body": "\nHi awkweird,<br/><br/>Glad it helped.<br/>The **baseSurface_** input controls the ground (roof) plane, but you are right, previously it did not support the vertical roof/walls.<br/><br/>Check the attached file below for an example of the 3rd solution.<br/><br/>Do not be confused by the additional division of the initial PV surfaces (yellow group label: **\"divided PV surfaces\"**). This is to more accurately account for their self shading.<br/>The attached .gh file takes a little bit more to execute everything, so I internalized some of the results, and the final result also.<br/><br/>Feel free to change something in definition (for example try using a bit larger tilt angle, instead of the optimal one) but be prepared to wait a little bit, before everything is executed. I labeled with green group color the steps I have been using. If you have a bit stronger PC configuration, you only need to internalize once (**\"2 internalize\"** label). If not do the steps that that I did.<br/><br/>Have a great weekend!\n", "attachments": [{"link": "http://www.grasshopper3d.com/group/ladybug/forum/attachment/download?id=2985220%3AUploadedFile%3A1497736", "name": "FindingoptimalsizeofPVingivenarray3.gh"}], "created_by_name": "djordje", "created_at": "March 31, 2016 at 12:11pm", "created_by": "djordje", "replies": []}, {"body": "\nI am sorry for not replying back quickly because I was working on my thesis and other university class related works. Meantime, I was playing with the definition you have given me last time which works very perfect for the particular case I asked.\n\nNow I am little bit curious about how the Ladybug_Sunpath Shading (SunpathShading) component works. Does _analysisGeometry input only require PV panel surfaces? It seems like Points and normal Surfaces could also work according to its description.\n\nAnd my main question is that how does Ladybug_Photovoltaics Surface (PhotovoltaicsSurface) take an account of surrounding obstacles which could potentially makes a shade on the analysis geometry.\n\nIn this example, the upper floor geometry will make a shadow on the lower floor of a fa\u00e7ade that includes the PV I am going to test. In that case, do I have to connect the upper floor fa\u00e7ade geometry as a context_ input? Or does the component itself will understand the whole geometry and calculate shading automatically that it would influence the outputs such as ACenergyPerYear?\n\nThank you very much for your time and concern.<br/> Looking forward to hear from you.<br/> <br/> <br/> Amaraa\n", "attachments": [], "created_by_name": "Amaraa", "created_at": "May 22, 2016 at 7:29am", "created_by": "Amartuvshin", "replies": []}, {"body": "\n<br/><br/><br/>Hi Amaraa,\n\n\n\nNow I am little bit curious about how the Ladybug_Sunpath Shading (SunpathShading) component works. Does _analysisGeometry input only require PV panel surfaces? It seems like Points and normal Surfaces could also work according to its description.\n\nAs you correctly noticed **_analysisGeometry** input parameter allows supplying both surfaces and points.<br/>**Sunpath Shading** component actually calculates the shading per each corner point of the supplied surface.<br/>For example: if you supply some rectangular surface to the **_analysisGeometry** input, it will pick all four corner points of that surface, calculate the annual shading for each one of them, and then calculate their average. That's the **annualShading** value of the surface you supplied to the **_analysisGeometry** input.<br/><br/>**Sunpath shading** component can also be used to analyse the impact of shading per point. This can be beneficial for solar radiation or comfort studies, where one would supply a grid of points to the **_analysisGeometry** input.<br/><br/>As you are concerned with Photovoltaics, you do not have to worry about supplying points instead of surfaces. You can, but it's easier if you supply only the surfaces.\n\n\n\nAnd my main question is that how does Ladybug_Photovoltaics Surface (PhotovoltaicsSurface) take an account of surrounding obstacles which could potentially makes a shade on the analysis geometry.\n\nTo account for the shading from the surrounding objects, use the **context_**, **coniferousTrees_** and **deciduousTrees_** inputs of the **Sunpath shading** component. The **context_** input requires opaque obstacles (terrain, buildings, houses...) while **coniferousTrees_** and **deciduousTrees_** ones will account for the transparency of trees. I attached the file below with some internalized obstacles.\n\n\n\nIn this example, the upper floor geometry will make a shadow on the lower floor of a fa\u00e7ade that includes the PV I am going to test. In that case, do I have to connect the upper floor fa\u00e7ade geometry as a context_ input? Or does the component itself will understand the whole geometry and calculate shading automatically that it would influence the outputs such as ACenergyPerYear?\n\nThis is called self shading.<br/>You do not have to supply the surfaces additionally to the **context_** input. The component will \"under the hood\" add them to the **context_** input to account for self shading. Last year this hasn't been the case, but after the suggestion by Chris Mackey, I changed this feature.<br/>However, as we are using the **PV SWH System size** component, there will be no self-shading. The **PV SWH System size** component positions the PV rows in such a way, that no self shading will appear for the given **minimalSpacingPeriod_** criteria.<br/><br/>If these explanations were not clear, or if you still have some issues, do not hesitate to reply back.\n", "attachments": [{"link": "http://www.grasshopper3d.com/group/ladybug/forum/attachment/download?id=2985220%3AUploadedFile%3A1534992", "name": "FindingoptimalsizeofPVingivenarray4.gh"}], "created_by_name": "djordje", "created_at": "May 22, 2016 at 9:06am", "created_by": "djordje", "replies": []}, {"body": "\nDear djordje<br/> <br/> Thank you very much for your detailed explanation it really helps to save lot of time. I have tested couple of simulations according to the **context_** input.\n\nI have noticed that daylight simulation runDaylightAnalyis havs a **_HBObjects** input which directly take other geometries thus it influences the daylighting results (tested).\n\nThen, I have tried to connect as you sketched on the grasshopper definition, however it shows the error of recursive function. Which makes me think that I have to internalize the data output from ACenergyPerHour instead of directly connect ot **ACenergyPerHour_** on SunpathShading as well as the **annualShading** to **annualShading** on DCtoACderateFactor (image). Please correct me if I am wrong about connecting these three components.\n\n<br/> If I need to internalize the data from each generation, what would be ideal algorithm to deal with it when I do Galapagos or other GA? (maybe couple of rec component with Boolean toggle on dispatch component) Because as you expect now, I am parametrically changing the fa\u00e7ade geometry and in every generated instances should be take an account of shading from upper floor of the fa\u00e7ade geometries to get realistic data from PV surface electricity generation.\n\n[Image upload is not working, click here to see the screenshot.](https://www.dropbox.com/s/1smhkvohdcuecio/Recursive%20connection%20error.png?dl=0)<br/> I hope you understand what I have written above. <br/> <br/> Kind regards.<br/> Amaraa\n", "attachments": [], "created_by_name": "Amaraa", "created_at": "May 24, 2016 at 1:19pm", "created_by": "Amartuvshin", "replies": []}, {"body": "\nHi Amaraa,\n\n\n\nGH will not allow recursive relationships, unless you use a few addons available.\n\n\n\nIn this case what I do is to copy/paste the DCtoACderateFactor (I am not on Windows I hope it's the right name) component and input the results from annual shading to the new component further down the workflow. At the end I have 2 of those components in my analysis.\n\n\n\nHope this helps!\n\n\n\nKind regards,\n\nTheodore.\n\n\n\n\n", "attachments": [], "created_by_name": "Theodoros Galanos", "created_at": "May 26, 2016 at 9:29pm", "created_by": "TheodorosGalanos", "replies": []}, {"body": "\nDear Theodore.<br/> <br/> I really appreciate your suggestion, however i cannot quite implement the way you have mentioned.\u00a0\n\nMy main goal now is to find a best PV panel in terms of electricity generation (maximizing output) that the panel itself take account of surrounding shadings. When I do it parametrically, the shading obstacles are also changes simultaneously as the PV panel change its shape.<br/> <br/> Could you please elaborate little bit how you deal with this kind of issue? I cannot replicate as you explained above.\u00a0<br/> <br/> The overall issue is that\u00a0**PhotovoltaicsSurface**\u00a0component needs a data on\u00a0input\u00a0**DCtoACderateFactor_***\u00a0*node, which requires a data from\u00a0**DCtoACderateFactor**\u00a0component. To get this data, we need a\u00a0**SunpathShading**\u00a0component which needs another information from\u00a0**PhotovoltaicsSurface**\u00a0component. These three components are somehow connected to each other in order to yield potential electricity generation with the consideration of surrounding shading if I am not mistaken.<br/> In this case it the number of\u00a0**DCtoACderateFactor**\u00a0does not matter unless the recursion is solved is some other way.\n\n\u00a0\n\nKind regards.<br/> Amaraa\n\n\u00a0\n", "attachments": [], "created_by_name": "Amaraa", "created_at": "May 28, 2016 at 12:32am", "created_by": "Amartuvshin", "replies": []}, {"body": "\nTheodoros, thank you for the useful reply!<br/><br/>Amaraa my apologies for taking me too long to reply.\n\n\n\n-I have noticed that daylight simulation runDaylightAnalyis havs a _HBObjects input which directly take other geometries thus it influences the daylighting results (tested).\n\n<br/>Sunpath shading component needs to distinguish between opaque and semi transparent objects. That is why there are three types of context inputs. Do you find this troubling?<br/><br/>\n\n-Then, I have tried to connect as you sketched on the grasshopper definition, however it shows the error of recursive function. Which makes me think that I have to internalize the data output from ACenergyPerHour instead of directly connect ot ACenergyPerHour_ on SunpathShading as well as the annualShading to annualShading on DCtoACderateFactor (image). Please correct me if I am wrong about connecting these three components.\n\n<br/>I agree that this principle of internalizing the ACenergyPerHour from Photovoltaics surface component and then getting back the annualShading back to it, is a bit clumsy solution. But I do not think there is a better one. This is due to the [method we are using for calculation of the shading](http://solardat.uoregon.edu/download/Papers/UsingSunPathChartstoEstimatetheEffectofShadingonPVArrays.pdf).<br/>It needs to calculate the unshaded ACenergyPerHour, and then the shaded ACenergyPerHour with the use of unshaded ACenergyPerHour.<br/>As Theodore mentioned in his reply, a small trick to overcome this is to use another Photovoltaics surface component at the end. Check the attached file below.\n\n<br/>-I am parametrically changing the fa\u00e7ade geometry and in every generated instances should be take an account of shading from upper floor of the fa\u00e7ade geometries to get realistic data from PV surface electricity generation.\n\n<br/>Just to be sure I understand you correctly: when you mention the \"upper floor of the fa\u00e7ade geometries\", is this what you have in mind (check the attached photo)?<br/><br/>I think I understand what was causing the confusion, and if you reply to my last question I will elaborate a bit more on the shading issue.\n", "attachments": [{"link": "http://www.grasshopper3d.com/group/ladybug/forum/attachment/download?id=2985220%3AUploadedFile%3A1538011", "name": "FindingoptimalsizeofPVingivenarray5.gh"}, {"link": "http://www.grasshopper3d.com/group/ladybug/forum/attachment/download?id=2985220%3AUploadedFile%3A1538012", "name": "upper_floor_facade_geometry.jpg"}], "created_by_name": "djordje", "created_at": "May 28, 2016 at 2:18am", "created_by": "djordje", "replies": []}, {"body": "\nMy mistake that I haven't red the last part clearly. As you explained, the thing i was looking for is self shading.<br/>\"You do not have to supply the surfaces additionally to the\u00a0**context_**\u00a0input. The component will \"under the hood\" add them to the\u00a0**context_**\u00a0input to account for self shading. Last year this hasn't been the case, but after the suggestion by Chris Mackey, I changed this feature.\"<br/><br/>I will test some cases and check how it effects the result.\u00a0<br/>Thank you once again.\u00a0<br/><br/><br/>Kind regards.<br/>Amaraa.\n", "attachments": [], "created_by_name": "Amaraa", "created_at": "May 28, 2016 at 1:01am", "created_by": "Amartuvshin", "replies": []}, {"body": "\nDear djordje.<br/> My\u00a0apologies\u00a0for not making the issue clear. Since I cannot reply to your last comment, I am commenting here.\u00a0\n\nJust to be sure I understand you correctly: when you mention the \"upper floor of the fa\u00e7ade geometries\", is this what you have in mind (check the attached photo)?<br/> <br/> I think I understand what was causing the confusion, and if you reply to my last question I will elaborate a bit more on the shading issue.\n\n\n\nWhat I meant about the upper floor geometry is that I was assuming that not only PV form upper floor, but also the other elements such as glazing, opaque panels, and external shading device.<br/> <br/> <br/> [<img class=\"align-full\" src=\"http://api.ning.com:80/files/QXFoMJO9hw6VZrEWx74vFKeRVy0UEpOecjLUE9Q-R2ppDshZulNjCPkxgdMQIlQBusVEkzZZnmcEnndh*7ZOYM9lb8upAvBA/123.jpg?width=721\" width=\"721\"/>](http://api.ning.com:80/files/QXFoMJO9hw6VZrEWx74vFKeRVy0UEpOecjLUE9Q-R2ppDshZulNjCPkxgdMQIlQBusVEkzZZnmcEnndh*7ZOYM9lb8upAvBA/123.jpg)Here in the picture, you would understand what I am trying to explain verbally. The testing PV panel is one in the middle of 3 by 3 building facade.\u00a0<br/> The question is how to calculate the shadings from the other geometries, which are painted in brownish colour in the image.<br/><br/>Just in case if the image is not seen, please find it\u00a0[here](https://www.dropbox.com/sc/n8eto5c4ruh8maq/AADy2ou9sDwPzxiOaFZoCWFjahttps://www.dropbox.com/sc/n8eto5c4ruh8maq/AADy2ou9sDwPzxiOaFZoCWFja)<br/> <br/>\n\nHope its clear now.\u00a0<br/> <br/> Kind regards.<br/> Amaraa.\n\n\n", "attachments": [], "created_by_name": "Amaraa", "created_at": "May 28, 2016 at 2:58am", "created_by": "Amartuvshin", "replies": []}, {"body": "\nHi Amaraa,\n\n\n\nI hope my comment won't complicate things, unfortunately I'm not at my computer to provide examples, or even test my suggestions.\n\n\n\nIn the hydrashare page for Honeybee, if memory serves well, you can find examples of parametric design using LB/HB, specifically the HB component pollinator workflows.\n\n\n\nIn these examples, a GH component (data recorder) is used to locally store either input parameters or output values of different model configurations and transmit them to pollinator. I can imagine, depending on how your facade is made parametric in GH, that you could save those input parameters (e.g. angle of surfaces or height of extrusion) and output variables for each iteration (e.g. annual shading).\n\n\n\nThis a search process through the design space. I do think that if you would set up the model as such, then it would be ok that the components in the PV workflow resetted after each iteration as the results would be saved. There is even a really good visualization platform Mostapha has shared to go along pollinator.\n\n\n\nYou can find examples of these workflows in the forum, simply search pollinator. I have one that I shared somewhere as well, although it was doing rudimentary things it would help.\n\n\n\nThis design space approach is a bit different than the optimization approach utilizing components like galapagos. It gives you an idea of the space of possible different desings and allows you to compare alternatives. Plus, it usually allows me to avoid all these issues of losing results between components in the workflo.\n\n\n\nI also find it very handy and much more efficient than simply allowing a component optimize everything for me. However, it can ncrease almost exponantially (or is it geometrically, I am always bad at this) to the range and number of your input parameters. So, if each square on the wall has more than a couple of input values for a a few input parameters, I would expect this to take a long time. Thankfully, the components in the workflow will let you know exactly how many iterations.\n\n\n\nIf this method is interesting to you and you follow it I would suggest a few things to hasten the process like utilizing only the squared above and on the sides of the PV panel, since the others won't really affect shading, selecting just 2 or 3 characteristic angles for extrusions, and perhaps approximating energy production through annual shading numbers (since I imagine they have an almost linear relationship).\n\n\n\nI do hope that I have understood what you want to do and the above information helps. I'm sure Djordje will give much better feedback on the specifics of the PV workflow. I will try and keep this page saved so that I can send over the example once I'm back at work mid of next week.\n\n\n\nGood luck!\n\n\n\nKind regards,\n\nTheodore.\n\n\n\n\n", "attachments": [], "created_by_name": "Theodoros Galanos", "created_at": "May 28, 2016 at 4:25am", "created_by": "TheodorosGalanos", "replies": []}]}]}