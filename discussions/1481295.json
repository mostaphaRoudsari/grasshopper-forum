{"body": "\nHello everyone,\n\n\n\nFor some time now, especially with the advent of Pollinate and DesignExplorer components, I have been dubbling with how to best take advantage of the parametric (and not generative) part of the optimization process. The main strategy is simple, deep search of the design space and assessment/visualization of building performance using the above mentioned components.\n\n\n\nI wanted however to also get an idea, quantitatively, of the performance of the different combinations of design parameters. And I wanted to do this within the framework of a search process and without using any of the well known (and certainly superior) optimization tools like Octopus. \u00a0To do that I created this ridiculously simple definition, replicating the Desirability function for multivariate optimization introduced by Harrington (1965).\n\n\n\nThe math is quite rudimentary:\n\n\n\n- in case of minimization of a parameter, the function takes the form\n\n\u00a0\u00a0\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if x &gt; B\n\nd(min) = \u00a0 \u00a0 \u00a0 \u00a0[(x-B)/(A-B)]^s, \u00a0 \u00a0 \u00a0 \u00a0if A &lt;= x &lt;=B\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if x &lt; A \u00a0\n\n\n\n\n\n- in case of maximization of a parameter, the function takes the form\n\n\u00a0\u00a0\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if x &lt; A\n\nd(max) = \u00a0 \u00a0 \u00a0 \u00a0[(x-A)/(B-A)]^s, \u00a0 \u00a0 \u00a0 if A &lt;= x &lt;=B\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01, \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if x &gt; B\n\n\n\nwhere:\n\nA, B, and s chosen by the user.\n\n\n\nA and B are the lower and upper limits for a specific parameter and are therefore completely subjective. Additionally, s is a value that makes the criterion easier or more difficult to satisfy (e.g. lower s values during minimization assign greater importance to a criterion, etc.).\n\n\n\nAdditional variables can be added by reproducing (i.e. copy/pasting) the individual functions and assigning a new parameter, limits and s values. The overall desirability of the model is given by a simple geometric mean of all the variables (the example is developed for 2 but you can quickly understand the logic).\u00a0\n\n\n\nAgain, this is a very primitive definition so there are no checks for any kind of errors (e.g. A and B selected the same, not connecting variables values to the geometric mean calculation, not getting the length of parameter list, etc). Also, I am well aware that a beginner to medium level of programming can transform this definition into an actual useful thing (if it is indeed smth useful). Finally, I am not even sure of the appropriateness of this method to the kind of analyses we perform with LB/HB.\u00a0<br/> <br/> Despite all that, it seemed very simple to use, extremely easy to understand, and a really good way to put me to sleep. I hope someone finds it interesting!\n\n\n\nKind regards,\n\nTheodore.\n", "attachments": [{"link": "http://www.grasshopper3d.com/group/ladybug/forum/attachment/download?id=2985220%3AUploadedFile%3A1481294", "name": "Desirability.gh"}], "created_by_name": "Theodoros Galanos", "created_at": "March 10, 2016 at 8:56am", "created_by": "TheodorosGalanos", "topic": "Pseudo multi-objective optimization with native components", "replies": [{"body": "\nTheodore,\n\n\n\nI just wanted to let you know that the simple multi-objective operation that you have here is very similar to that used by the shade benefit components:\n\n[https://github.com/mostaphaRoudsari/Honeybee/blob/master/src/Honeyb...](https://github.com/mostaphaRoudsari/Honeybee/blob/master/src/Honeybee_Energy%20Shade%20Benefit%20Evaluator.py#L578-L620)\n\n\n\nYou can see a similar set of formulas on page 4 of the shaderade paper where this type of shade benefit idea originally came from:\n\n[http://web.mit.edu/tito_/www/Publications/BS2011_Shaderade.pdf](http://web.mit.edu/tito_/www/Publications/BS2011_Shaderade.pdf)\n\n\n\nIn the case of the shade benefit, the two competing variables are shade benefit and shade harm and I see how this generalizable description that you gave here is useful for any case where you have two optimization criteria that competing against each other. \u00a0The exponent \"s\" has always been 1 in all of the cases I have worked with but I realize that changing this could be super-useful in the comfort shade benefit to account for the fact that people are usually better at adapting to extreme cold stress than to extreme heat stress. \u00a0I will try to work this in at some point:\n\n[https://github.com/mostaphaRoudsari/ladybug/issues/242](https://github.com/mostaphaRoudsari/ladybug/issues/242)\n\n\n\nThanks for the thoughtful post,\n\n-Chris\n", "attachments": [], "created_by_name": "Chris Mackey", "created_at": "March 11, 2016 at 10:16am", "created_by": "ChrisMackey", "replies": []}], "id": "1481295"}