{"body": "\nNot sure if this will be helpful but here it goes.\n\n\n\nThe way to break a non-convex polygon to convex ones seems to be to eliminate reflex vertices. The problem of identifying these reflex vertices is solved, if I understand it correctly (thanks for that Mostapha it's cool!), by the CCW algorithm. If my visual memory doesn't fail me, it will always be the middle point (B) of the non-ccw triad of points of a polygon that will be the reflex vertice.\n\n\n\nTo remove it we could do something like what Bayazit has implemented here ([https://mpen.ca/406/bayazit](https://mpen.ca/406/bayazit))\n\n\n\n1. extend the edges of the reflex vertice I until they hit an edge (at points I1 and I2)\n\n2. if there are no vertices between I1 and I2 then create a new vertice in the centre of I1I2 and connect to that.\n\n3. if there is one or more vertices then connect to the closest one.\n\n\n\nIn Francesco's example, you can easily imagine how that works in the corner of the roofs. Actually, for Francesco I was thinking that maybe a postprocessing solution (splitting all convex surfaces with the segments formed from the corner of roof/floor) would be an ugly but faster solution.\n\n\u00a0\n\nIn any case, if we can 'look' for vertices in Rhino then the above should be straightforward. I might sit down and see how to code this in Python, maybe it could be my initiation o.o\u00a0\n\n\n\nKind regards,\n\nTheodore.\n", "attachments": [], "created_by_name": "Theodoros Galanos", "created_at": "April 17, 2016 at 09:31AM", "created_by": "TheodorosGalanos", "parent_id": "topic_1508492", "id": "reply_2985220_Comment_1510515"}