{"body": "\nHey Guys,\n\n\n\nI am sorry that I am so late to the discussion and I really should have stepped in to make things clear earlier. \u00a0It seems like you figured out generally how the component is supposed to work and I will just clarify some of the details. \u00a0I will also note that I do not know what the **shadings** output of the\u00a0**decomposeByType\u00a0**component is supposed to do as Mostapha put it there a long time ago and I was not sure what his intentions were. Going down a list of clarification points:\n\n\n\n1) You are right that you should either connect up the shade breps to the **EPContext** component or just plug the **HBObjwShades** into the **RunSimulation** component (never do both). \u00a0However, connecting the breps to the\u00a0**EPContext**\u00a0component is greatly undesirable for two reasons: It will make the simulation run much longer and the energyPlus calculation will not account for the surface temperatures of the blinds (it will assume they are the same temperature as the outdoor air, which is very wrong in a lot of cases). \u00a0When you connect up the\u00a0**HBObjwShades**\u00a0to run the simulation, EnergyPlus will understand the blinds as abstract objects defined only by a numeric parameterization and not as actual geometry. \u00a0This enables the calculation to run fast and is also enough of a description that E+ can calculate the temperature of the blinds, thereby accounting for the heat that can be re-radiated from the blinds to the indoors when they get hot in the sun. \u00a0This more desirable way of running the blinds was how I imagined the component being run most of the time and I mostly included the shadeBreps so that you have a visual of what you are simulating.\n\n\n\n2) When you use the more desirable **HBObjWShades**\u00a0to approximate your blinds, you should use the **blindsSchedule** input in order to tell E+ when the shades are pulled (this is instead of the **transShcedule** on the **EPContext** component).\n\n\n\n3) The **zoneData** inputs on the\u00a0**EPWindowShade**\u00a0component are meant to help in an entirely different workflow, which evaluates shade benefit based on energy simulation results. \u00a0I apologize if it seems confusing to have two major uses of the component in one but we have so many Honeybee components right now and I did not want to make 2 separate ones when they seemed so similar. \u00a0See this example file to see how to do energy shade benefit ([https://app.box.com/s/oi64zoj5u1slz494grzhgmdkx7yie9jo](https://app.box.com/s/oi64zoj5u1slz494grzhgmdkx7yie9jo)).\n\n\n\nOk. \u00a0I think that clears up everything that I know. Now to the part that I do not. \u00a0As I\u00a0said, Mostapha put in the **shadings** input there a long time ago\u00a0and I do not know what his intentions were. \u00a0Abraham, as you know, I am about to do a major revision of the **EPWindowShade** component to make it compatible with OpenStudio, include drapes/generic shades in addition to blinds, and I also should figure out how to do electrochromic glazing. \u00a0I can easily include all of the visualized shades as output from the\u00a0**decomposeByType**\u00a0component when I do this. \u00a0However, I do not want to interfere with other intentions Mostapha had when he put the input in. \u00a0If he could confirm that this was in-line with his vision for the **shadings** output, I will implement it soon.\n\n\n\n-Chris\n\n\n", "attachments": [], "created_by_name": "Chris Mackey", "created_at": "August 01, 2015 at 09:15AM", "created_by": "chris", "parent_id": "reply_2985220_Comment_1332440", "id": "reply_2985220_Comment_1335238"}