{"body": "\n<br/><br/><br/>Hi Amaraa,\n\n\n\nNow I am little bit curious about how the Ladybug_Sunpath Shading (SunpathShading) component works. Does _analysisGeometry input only require PV panel surfaces? It seems like Points and normal Surfaces could also work according to its description.\n\nAs you correctly noticed **_analysisGeometry** input parameter allows supplying both surfaces and points.<br/>**Sunpath Shading** component actually calculates the shading per each corner point of the supplied surface.<br/>For example: if you supply some rectangular surface to the **_analysisGeometry** input, it will pick all four corner points of that surface, calculate the annual shading for each one of them, and then calculate their average. That's the **annualShading** value of the surface you supplied to the **_analysisGeometry** input.<br/><br/>**Sunpath shading** component can also be used to analyse the impact of shading per point. This can be beneficial for solar radiation or comfort studies, where one would supply a grid of points to the **_analysisGeometry** input.<br/><br/>As you are concerned with Photovoltaics, you do not have to worry about supplying points instead of surfaces. You can, but it's easier if you supply only the surfaces.\n\n\n\nAnd my main question is that how does Ladybug_Photovoltaics Surface (PhotovoltaicsSurface) take an account of surrounding obstacles which could potentially makes a shade on the analysis geometry.\n\nTo account for the shading from the surrounding objects, use the **context_**, **coniferousTrees_** and **deciduousTrees_** inputs of the **Sunpath shading** component. The **context_** input requires opaque obstacles (terrain, buildings, houses...) while **coniferousTrees_** and **deciduousTrees_** ones will account for the transparency of trees. I attached the file below with some internalized obstacles.\n\n\n\nIn this example, the upper floor geometry will make a shadow on the lower floor of a fa\u00e7ade that includes the PV I am going to test. In that case, do I have to connect the upper floor fa\u00e7ade geometry as a context_ input? Or does the component itself will understand the whole geometry and calculate shading automatically that it would influence the outputs such as ACenergyPerYear?\n\nThis is called self shading.<br/>You do not have to supply the surfaces additionally to the **context_** input. The component will \"under the hood\" add them to the **context_** input to account for self shading. Last year this hasn't been the case, but after the suggestion by Chris Mackey, I changed this feature.<br/>However, as we are using the **PV SWH System size** component, there will be no self-shading. The **PV SWH System size** component positions the PV rows in such a way, that no self shading will appear for the given **minimalSpacingPeriod_** criteria.<br/><br/>If these explanations were not clear, or if you still have some issues, do not hesitate to reply back.\n", "attachments": [{"link": "http://www.grasshopper3d.com/group/ladybug/forum/attachment/download?id=2985220%3AUploadedFile%3A1534992", "name": "FindingoptimalsizeofPVingivenarray4.gh"}], "created_by_name": "djordje", "created_at": "May 22, 2016 at 09:06AM", "created_by": "djordje", "parent_id": "reply_2985220_Comment_1535074", "id": "reply_2985220_Comment_1534991"}