{"body": "\nHello Ladybug Community! \u00a0We are pleased to announce a few improvements and additions to the Ladybug + Honeybee (legacy version). \u00a0The majority of Ladybug improvements are new components that assist in common tasks like updating GH definitions, viewing images on the GH canvass, and augmenting existing study-types. \u00a0Most of the improvements to Honeybee have been in the making for a while and are just getting into the spotlight with this release. \u00a0Notably, a number of improvements have been made to support large-scale full building energy models, including fixes to memory issues with large models, better components for splitting building masses into zones, and the ability to store HBZones in external files. \u00a0Additionally, the THERM workflows have gotten a boost and these simulations can now be run directly from the Grasshopper canvass.\n\n\u00a0\n\nAs always you can [download the new release from Food4Rhino](http://www.food4rhino.com/app/ladybug-tools). Make sure to remove the older version of Ladybug and Honeybee before you do so and update your scripts. \u00a0So, without further adieu, here is the list of the new capabilities added with this release:\n\n<br/><br/>\n\n**LADYBUG**\n\n<br/>**Better Method for Updating Old Grasshopper Files** - As many of you have come to realize, Ladybug + Honeybee is updated on a fairly regular basis, with a stable release roughly every 6 months and a github version that never ceases to improve itself on a weekly basis. \u00a0For this reason, we realize that updating old Grasshopper definitions to use recent components is a challenge for many of us. \u00a0While we\u2019ve had some methods for this in the past, there were always hiccups, particularly when it came to components that had new inputs/outputs since the previous version. \u00a0Accordingly, Mostapha has added a new \u201cLadybug_Update File\u201d component that will automatically update any Grasshopper Definition to be synchronized with the version of Ladybug+Honeybee that is currently in your toolbar (aka. the components in your userobjects folder). \u00a0If there is a component that has new inputs/outputs since the time you built the definition, it will be automatically circled in red in your GH definition and a newer version of the component will be automatically added right next to this component:\n\n[<img class=\"align-full\" src=\"http://api.ning.com:80/files/CDzgHsdqv3zLpz5Y-Ebdzir7h56UhKlFEM2Ida2Sn6gC0X7xD*rwFHyK2uovRElEHM8h7rBGmVq2LgJDbYCE6rs3t1rJfuyJ/UpdateLadybug.jpg?width=750\" width=\"750\"/>](http://api.ning.com:80/files/CDzgHsdqv3zLpz5Y-Ebdzir7h56UhKlFEM2Ida2Sn6gC0X7xD*rwFHyK2uovRElEHM8h7rBGmVq2LgJDbYCE6rs3t1rJfuyJ/UpdateLadybug.jpg)\n\nWhile you still have to do some manual connecting of inputs to the newer component in this case, it should be much faster than our older methods and will hopefully help your old definitions survive long into the future!\n\n\u00a0\n\n**EPWmap Now includes OneBuilding Files** - Mostapha has added a number of new features to the [EPWmap web interface](http://www.ladybug.tools/epwmap/)\u00a0that the \u201cDownload Ladybug\u201d component connects to. \u00a0Among the improvements are a color wheel that quickly shows you how hot, cold, and comfortable a given climate is and, perhaps more importantly, there is now support for EPW files sourced from OneBuilding. \u00a0With the addition of many more weather files, you should now be able to use Ladybug with ease for more locations across the planet. \u00a0We should also note that the \u201cOpen EPW and STAT\u201d component that downloads/unzips files from a URL now supports OneBuilding URLs.\n\n<br/>**New Image Viewer Component** - Mingbo Peng has graced Ladybug with a fantastic new \u201cImage Viewer\u201d component that takes a given image file on one\u2019s machine and displays it on the Grasshopper canvas. \u00a0It also enables one to pull color data off of the image with ease by simply clicking on the pixel of the image one is interested in. \u00a0This new component is useful for a wide variety of cases, including the viewing of screenshots after they have been taken with the \u201cLadybug_Capture View\u201d or \u201cLadybug_Render View\u201d components. \u00a0However, many of you will likely recognize it as most immediately useful in workflows involving image-based Honeybee Daylight (Radiance) simulations. \u00a0This is particularly true as Migbo has built-in the capability to read many image file types, including PNG, JPEG, GIF, TIFF and the High Dynamic Range (.HDR) image files that Radiance Outputs:\n\n[<img class=\"align-full\" src=\"http://api.ning.com:80/files/CDzgHsdqv3w*C0VTsoHqb6P8t2b3XGPjFimk2O-3r4j2PvoPY2owMFV9a13O4S3NSkHbnlaPhKQ82WQ1WL5hbsOWkBfRCZVy/ImageViewer.JPG?width=750\" width=\"750\"/>](http://api.ning.com:80/files/CDzgHsdqv3w*C0VTsoHqb6P8t2b3XGPjFimk2O-3r4j2PvoPY2owMFV9a13O4S3NSkHbnlaPhKQ82WQ1WL5hbsOWkBfRCZVy/ImageViewer.JPG)\n\nThe following video gives a quick overview of the Image Viewer\u2019s capabilities:<br/>\n\n<iframe _origwidth=\"600\" allowfullscreen=\"\" frameborder=\"0\" height=\"338\" src=\"https://www.youtube.com/embed/j3ocXuvktXg?wmode=opaque\" width=\"600\"></iframe>\n\n\nThe new component can be found under the Ladybug_Extra tab and I think I speak for us all in saying thank you Mingbo for this great component!\n\n\u00a0\n\n**New Sun Shades Calculator Released Under WIP** - After over a year of software development and nearly a career's worth of geometric math development, a joint effort between Abraham Yezioro and Antonello Di Nunzio has produced a new sun shade design component that can be described as nothing short of \u201cmagical.\u201d \u00a0Based on a similar principle to the current \u201cLadybug_Shading Designer,\u201d the new component takes an input of sun vectors and produces shade geometries that can block the vectors. \u00a0However, in comparison to the shading designer, the range of shade options that are available in this new component is truly staggering, ranging from classic overhangs, louvers and fins to pergolas and custom shade surfaces. \u00a0Perhaps more importantly, the calculation methods used by this new component are faster and more reliable. \u00a0It can currently can be found under the WIP section of Ladybug and it will continue to evolve in new versions of Ladybug.\n\n\u00a0\n\n**Renewable Component Now Support Sandia and CEC Photovoltaics Modules** - Polishing off his many contributions to the \u201cRenewables\u201d section of Ladybug, Djordje Spasic has added support for a couple more ways of defining Photovoltaic modules for renewables estimation. \u00a0Specifically, the Ladybug WIP section now includes components to import modules defined with the California Energy Commission (CEC) and Sandia Labs.\n\n<br/><br/><br/>\n\n**HONEYBEE**\n\n**\u00a0**\n\n**Support for OpenStudio 2.x** - A few months ago, the National Renewable Energy Lab (NREL) released a [stable version of OpenStudio version 2](https://github.com/NREL/OpenStudio/releases/tag/v2.2.0), which included a number of improvements in stability and available features. \u00a0This stable release of Honeybee is built to work with the new version of OpenStudio and, in the coming months, Honeybee will be adding a few more capabilities to its OpenStudio workflows to support v2.x\u2019s new capabilities. \u00a0Most notable among these will be support for [OpenStudio measures](https://nrel.github.io/OpenStudio-user-documentation/getting_started/about_measures/). \u00a0Measures are short scripts written in Ruby using [OpenStudio\u2019s SDK](https://openstudio-sdk-documentation.s3.amazonaws.com/index.html)\u00a0to quickly edit and change OpenStudio models. \u00a0They are fundamental to visions of OpenStudio as a flexible energy modeling interface and to Honeybee\u2019s goals of being a collaborative interface between the architectural and engineering industries. \u00a0Stay tuned for the next release for many of these new capabilities!\n\n\u00a0\n\n**Critical Memory Issue Fixed for Large Energy Models** - A number of you wonderful members of our community have been aware of computer memory issues with large Honeybee models for some time (examples: [1](https://github.com/mostaphaRoudsari/honeybee/issues/572), [2](https://github.com/mostaphaRoudsari/honeybee/issues/499), [3](http://www.grasshopper3d.com/group/ladybug/forum/topics/hb-and-lb-crashing), [4](http://www.grasshopper3d.com/group/ladybug/forum/topics/each-iteration-adds-to-ram-usage-honeybee)). \u00a0Namely, a model that is larger than 50 zones could quickly eat up 16 GBs of memory and change Honeybee from a fast-flying insect to something more reminiscent of a snail. \u00a0We are happy to say that, after a much longer time than it should have taken us, we [finally identified and fixed the issue](https://github.com/mostaphaRoudsari/honeybee/commit/806188a399ed4ab02b8e731fbe6305442f3d9268). \u00a0In this version of Honeybee, such large models can now be created using less than 2% of the memory and time previously. \u00a0Thanks to all of you who made us aware of this and hopefully you will now reap the rewards of your struggle.\n\n<br/>**Split Building Mass Component Getting a Makeover** - Many of you veteran Ladybug users will recognize Saeran Vasathakumar as one of the original contributors of Ladybug who [added components for solar fans and envelopes](http://www.grasshopper3d.com/group/ladybug/forum/topics/solar-fan-solar-envelope-with-ladybug)\u00a0years ago. \u00a0Now he\u2019s back with new components to split a building mass into zones that are truly revolutionary in their speed and methodology. \u00a0Saeran has divided the new capabilities into two components (one for floor-by-floor subdivision and another for core-perimeter subdivision) and they both can be found under the WIP section of this release. In this WIP version, core-perimeter thermal zones can only be generated for all convex and very simple concave geometries. Most concave geometries and geometries with holes (or courtyards) in them will fail. However it can handle even very complex convex geometries with speed and ease. You can expect the component to start accommodating concave/courtyard geometries very soon.\n\n[<img class=\"align-full\" src=\"http://api.ning.com:80/files/CDzgHsdqv3x4LYuKtZHiQ7LqwcSAZ-w2a3kT6QCHtQMkn9Mj83dt6ZGTZ54QE7Iccu-hnEnvrUZ7fsqn9d9R6987Fj4sEtcu/NewSplitBldgMass.JPG?width=750\" width=\"750\"/>](http://api.ning.com:80/files/CDzgHsdqv3x4LYuKtZHiQ7LqwcSAZ-w2a3kT6QCHtQMkn9Mj83dt6ZGTZ54QE7Iccu-hnEnvrUZ7fsqn9d9R6987Fj4sEtcu/NewSplitBldgMass.JPG)\n\n\n\n**Load / Dump HB Objects to File** - Keeping in line with the support of large, full building energy models, this release includes full support for two components that can dump and load any HBObjects to a standalone file. \u00a0All information about HBzones can go into this file including custom constructions, schedules, loads, natural ventilation, shading devices, etc. \u00a0You can then send the resulting .HB file to someone else and they can load up the same exact zones in another definition. \u00a0This also makes it possible to have one Grasshopper file for generating the zones and running the simulation and another GH definition to import results and color zones/surfaces with those results, make energy balance graphics, etc.\n\n\u00a0\n\n**Write ViewFactorInfo to File** - After many of you asked for it, the _viewFactorInfo that is output from the \u201cHoneybee_View Factor\u201d component can now be written out to an external file using the same Load / Dump HB Objects components cited above. \u00a0For those of you who have worked with the comfort map workflows, you probably already know that calculating these view factors is one of the most time consuming portions of building a microclimate map. \u00a0Having to re-run this calculation each time you want to open up the Grasshopper script is a nuisance and, thanks to this new capability, you should only have to run it once and then store your results in an external .HB file.\n\n\u00a0\n\n**Transform Honeybee Components Modified for Large Model Creation** - Many large buildings today are made up of copies of the same rooms repeated over and over again across multiple floors, or along a street, etc. \u00a0Accordingly, one can imagine that the fastest way to create a full building energy model of such buildings is to simply move and copy the same zones several times. \u00a0This is what a new set of edits to the Honeybee Transform components is aimed at supporting by allowing one to build a custom set of zones, translate them several times with a Honeybee_Transform component, then solve adjacencies on all zones to make a complete energy model.\n\n\u00a0\n\n**Central Plants Available on HVAC Systems** - While Honeybee has historically supported the assigning of separate HVAC systems to different groups of zones, each HVAC was always an entirely new system from the ground up. \u00a0So a building with separate VAV systems for each floor would be modeled with a different chiller and boiler for each floor. \u00a0While this can be the case sometimes, it is more common to have only one chiller and boiler per building but separate air systems for each floor. \u00a0The new \u2018centralPlant_\u2019 options on the Honeybee coolingDetails and heatingDetails enable you to create this HVAC structure by making a single boiler and chiller for any HVAC systems that have this option toggled on. \u00a0Furthermore, in the case of VRF systems, you can also centralize the ventilation system, using the grouping of zones around a given HVAC to assign which zone terminals are connected to a given heat pump.\n\n\u00a0\n\n**More HVAC Templates Added** - As the profession continues to push the industry standard towards lower-energy HVAC systems, Honeybee intends to keep up. \u00a0In this release, we have included a few more templates for modeling advanced HVAC systems including Radiant Ceilings, Radiant Heated Floors + VAV Cooling, and Two Ground Source Heat Pump (GSHP) systems. \u00a0Variable Refrigerant Flow (VRF) systems have also gotten a large boost as it is now possible to model these systems with more efficient water-source loops. \u00a0The next release will include the ability to model central ground source systems that use hydronics for heating cooling delivery.\n\n**\u00a0**\n\n**Run THERM Simulations Directly from Grasshopper** - Anyone who has used the THERM workflow in the past likely realized that, while Honeybee can write the THERM file, you would still have to open model in THERM yourself and hit \u201csimulate\u201d to get results. \u00a0Now that LBNL has started a transition to becoming more open, they have graciously allowed [free access for everyone to run THERM from a command line](https://windows.lbl.gov/software/therm/FAQ/THERMCommandLIne.html). \u00a0What this means for Honeybee is that you no longer need to open THERM at all in order to get results and you can now work entirely in Rhino/Grasshopper. \u00a0This also opens up the possibility of long parametric runs with THERM models since you can now automatically run simulations and collect results as you animate sliders, use galapagos, etc. \u00a0A special thanks is due to the LBNL team for exposing this feature, including Setphen Selkowitz, Christian Kohler, Charlie Curcija, Eleanor Lee, and Robin Mitchell.\n\n\u00a0\n\n**All Options Exposed for THERM Boundary Conditions** - To finish off the full implementation of THERM in Honeybee, a final component has been added called \u201cHoneybee_Custom Radiant Environment.\u201d \u00a0This component completes the access to all boundary condition options that THERM offers, including separate radiant and air temperatures, different view factor models, and the specification of additional heat flux (which is typically used to account for solar radiation).\n\n\u00a0\n\n**Improvements to Schedule-Generating Components** - Many of you who have watched the Honeybee energy modeling video tutorials have likely gotten in the habit of using CSV schedules for everything. \u00a0While this is definitely one valid way to work, it is not always the most efficient since simple schedules can be specified much more cleanly to EnergyPlus/OpenStudio and the use of CSVs can also make it difficult to share your energy models (since you have to send CSV files along with the schedules themselves). \u00a0This release adds two new schedule components that should take care of a lot of cases where CSV schedules were unnecessary. \u00a0The new \u201cConstant Schedule\u201d component allow you to quickly make a schedule that is set at a single value or a set of constantly repeating 24-hour values. \u00a0The second component allows you to create \u201cSeasonal Schedules\u201d by connecting \u201cweek schedules\u201d from the other schedule components along with analysis periods in which these seek schedules operate. \u00a0Together, these will hopefully make our schedule-generating habit a bit better as a community.\n\n<br/><br/><br/>Lastly, many of you may know Mingbo Peng as the current maintainer of the [Design Explorer\u00a0web interface](http://tt-acm.github.io/DesignExplorer/)\u00a0and the Colibri components under [TTToolbox](http://www.food4rhino.com/app/tt-toolbox). \u00a0Both of these tools have been revolutionary in enabling \u201cbrute force\u201d studies of design spaces (aka. Grasshopper scripts where one runs all combinations of a set of sliders). Now, Mingbo has graced Ladybug with the aforementioned image viewer component and it is with pride that we welcome Mingbo Peng to the development team!\n\n<br/><br/>\n\nAs always let us know your comments and suggestions.<br class=\"kix-line-break\"/>Cheers!\n\n<br class=\"kix-line-break\"/>The Ladybug Tools Development Team\n\n\n", "attachments": [], "created_by_name": "Chris Mackey", "created_at": "July 30, 2017 at 07:30PM", "created_by": "chris", "topic": "Release Notes - Ladybug 0.0.65 and Honeybee 0.0.62", "id": "topic_1790876"}