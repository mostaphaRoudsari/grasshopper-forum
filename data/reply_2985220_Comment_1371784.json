{"body": "\nSo, a bit of headway -\u00a0\n\n\n\nIt looks like the two input nodes represent two different ways of defining what is to be done, based on the single line check in the code that triggers execution of main() if either inputs are non-null.\n\n\n\nThe \"pattern_\" node expects (as you basically figured out) a T/F pattern that corresponds to the list of surfaces in a zone. since the zones come into the remGlz component (grafted and simplified) in separate branches, the pattern input should match that structure.\u00a0\n\n\n\nI haven't figured out the structure looked for by the srfIndex_ node yet.\n\n\n\nThis is just a guess, but since the actual \"doing stuff\" commands in the code are \"surface.removeAllChildSrfs()\" methods, then I assume: right now it's only possible to remove all the child surfaces at once, rather than culling out individual child surfs (windows).\n\n\n\n...This hits my current knowledge limit. I started poking through the honeybee code. It looks like the child surfs are indexed? (Based on seeing \"surfaces.childsrfs[]\" and something about a \"basechildsrf\").\n\n\n\nSo presumably one could set surfaces.childsrfs[n] = null or something like that based on an array fed to a function input. Perhaps I'll take a stab at it at some point (if you don't beat me to it).\n\n\n\nBut for now I think that answers my question. this all started because I wanted to clean up the geometry I fed into e+. But since I'm not using e+'s geometry-sensitive internal radiation distribution models, I believe the glazing apertures get combined in pre-processing anyway, and don't slow the simulation down.\u00a0\n\n\n\nThanks for the consult! This was my first time really poking around under the hood; I'm more astounded than I was before at what you fellows have accomplished so far.\u00a0\n", "attachments": [], "created_by_name": "Nick Novelli", "created_at": "October 1, 2015 at 2:47pm", "created_by": "NickNovelli", "parent_id": "reply_2985220_Comment_1371604", "id": "reply_2985220_Comment_1371784"}