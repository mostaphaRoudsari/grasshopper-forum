{"body": "\n[<img class=\"align-center\" src=\"http://api.ning.com:80/files/8fil5gmLgTbSS4*df5HO8hiEFZm-Tag2nutZDArblUGZ22Z-g2Jvpc30xU9cNJXG4ez4JNAzHJKda8HQN97D8OYJOdGNe7-T/Screenshot2014112514.09.00.png?width=721\" width=\"721\"/>](http://api.ning.com:80/files/8fil5gmLgTbSS4*df5HO8hiEFZm-Tag2nutZDArblUGZ22Z-g2Jvpc30xU9cNJXG4ez4JNAzHJKda8HQN97D8OYJOdGNe7-T/Screenshot2014112514.09.00.png)so I decided to down the analysis area and up the sample rate.\n\nthis took about 22 mins to analyze. I have a i7 4700mq, hyperthreaded to 8 cores and I am beginning to think maybe this is not good enough. For a while I have been thinking about the possibility of gpu computing for leveraging computation but I am still scratching the surface mostly. I know its a kind of hot topic in scientific computing. and I know there is a community of parallel programming with python... but that's more down the line of my development...\n\n\n\nanyways, I ended up just sorting all the points by their z value.\n\n[<img class=\"align-center\" src=\"http://api.ning.com:80/files/8fil5gmLgTaDTqolF-FcEwyjTy7Sf34x58Cuf6cUREpyDN25DXbrbk07URAaMQVgSpZqW7oisivQ6EUkPX6YbFxkb6-IZxWq/Screenshot2014112519.40.36.png?width=721\" width=\"721\"/>](http://api.ning.com:80/files/8fil5gmLgTaDTqolF-FcEwyjTy7Sf34x58Cuf6cUREpyDN25DXbrbk07URAaMQVgSpZqW7oisivQ6EUkPX6YbFxkb6-IZxWq/Screenshot2014112519.40.36.png)\n\n\n\nSo I have been able to use the vertex to extract color gradient and draw lines aligned to the vertex normals. However the normals at the edges of the slabs I get diagonal normals, and they seem to be somewhat inconsistent. I would need to either round them up to a certain angle or cull them out... not sure how to do this right now.\u00a0\n\n\n\n[<img class=\"align-full\" src=\"http://api.ning.com:80/files/DmFIhqID0Fo7nrDgAIFmUX2S-zpU4DkQhiCGnYc*I*ArBf3GWru*IEGOz2gBIcEb-fGnEpRjJjniHO7nsFL-zD74vehgW9k3/Screenshot2014112605.28.05.png?width=721\" width=\"721\"/>](http://api.ning.com:80/files/DmFIhqID0Fo7nrDgAIFmUX2S-zpU4DkQhiCGnYc*I*ArBf3GWru*IEGOz2gBIcEb-fGnEpRjJjniHO7nsFL-zD74vehgW9k3/Screenshot2014112605.28.05.png)\n\n\n\nand I feel there should be a convenient way to organize and branch points by what faces, mesh, or close curve they are included. and I found this thread where I can\u00a0[test points by their surface inclusion.](http://www.grasshopper3d.com/forum/topics/pt-test-for-surface-inclusion)\u00a0I have never used the \"D\" output of surface evaluate but this might work.\n\n\n\nWell anyhow the fun begins - facade design!\n\n\n\nI want to detail rainscreen panels and offset them where there is more radiation falling over the course of the year.\n\n\n\n\n\nI also want the southern facade to work like a solar chimney (in the lower half, like a climbing solar chimney) that channels hot air building up the facade from the sun all the way to the roof, and pull air cross the interior out of vents. So I need to further divide the facade surface breps to fixed rainscreens and operable shades.\u00a0\n\n\n\nmy goal is to move the information over to detail and specificate to revit. and this would make a good occasion to test out the brand new mantis shrimp.\u00a0I hope I can run revit + dynamo and this analysis together :)\n\n\n\nSo I think I might be at the end of this particular thread - the answer to the RAM bottleneck is - DOWNSIZE YOUR SAMPLES!\n\n\n\n\n\n\n", "attachments": [], "created_by_name": "Youngjae chung", "created_at": "November 26, 2014 at 04:00AM", "created_by": "YOUNGJAECHUNG", "parent_id": "reply_2985220_Comment_1172722", "id": "reply_2985220_Comment_1175808"}