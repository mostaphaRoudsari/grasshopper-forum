{"body": "\nHi Mostapha,\n\n\n\nThank you so much for the code! I was actually using the random list component from GH to break the master list (all possible combinations) into a smaller one.\n\n\n\nThis smaller list is what is called the Training Set in ML. That list I actually put into my model and produce results for, and use later on to train the model.\n\n\n\nAfter the model is trained, I need to pass the master list to it (as a numpy array) in order for it to predict all outcomes. That is why I need to also run all options of the sliders and produce the whole space of combinations.\n\n\n\nI do that as a second step, right after I've finished designing the model. I disable the whole definition apart from these sliders so that there is no computational cost anywhere. Then I just run the fly component. That worked like a charm with 23000 combinations (1st case), it was at the 2nd hour of calculation before I left work yesterday. Now that is probably normal, since it's a lot of computation. I was just wondering if there's something faster.\n\n\n\nWould using code like the one you posted be faster in any way, or different than what Fly does?\n\n\n\nRegards,\n\nTheodore.\n\n\u00a0\n", "attachments": [], "created_by_name": "Theodoros Galanos", "created_at": "November 29, 2016 at 03:36PM", "created_by": "TheodorosGalanos", "parent_id": "reply_2985220_Comment_1648268", "id": "reply_2985220_Comment_1648563"}